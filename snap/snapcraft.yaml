name: pelion-edge
base: core
version: "1.2"
summary: Pelion Edge
description: Pelion Edge
confinement: strict
grade: devel
architectures: 
  - amd64

# List of applications (commands, binaries, daemons) in the snap.
apps:
    edge-core:
      command: launch-edge-core.sh
      daemon: simple
      plugs: [network-bind]
    edge-core-reset-storage:
      command: launch-edge-core.sh --reset-storage
      plugs: [network-bind]
    help:
      command: cat ${SNAP}/help.md
    deviceoswd:
      command: wigwag/system/bin/deviceOSWD -w 3000 -m 900 -s /var/lib/pelion-edge/deviceOSkeepalive
      daemon: simple 
      plugs: [network-bind]
layout:
    /var/lib/pelion-edge:
        bind: $SNAP_DATA/var/lib/pelion-edge
parts:
    edge-core:
      plugin: cmake
      source: https://github.com/ARMmbed/mbed-edge.git
      source-tag: 0.9.0
      build-packages:
        - build-essential
        - cmake
        - git
      override-pull: | 
        snapcraftctl pull
        git submodule update --init --recursive
        cp ${SNAPCRAFT_PROJECT_DIR}/mbed_cloud_dev_credentials.c config/mbed_cloud_dev_credentials.c
        cp ${SNAPCRAFT_PROJECT_DIR}/cmake/target.cmake config/target.cmake
        cp ${SNAPCRAFT_PART_SRC}/cmake/toolchains/mcc-linux-x86.cmake config/toolchain.cmake
      configflags:
        - -DCMAKE_BUILD_TYPE=Release
        - -DTRACE_LEVEL=INFO
        - -DFIRMWARE_UPDATE=OFF
        - -DDEVELOPER_MODE=ON
        - -DFACTORY_MODE=OFF
        - -DBYOC_MODE=OFF
        - -DTARGET_CONFIG_ROOT=${SNAPCRAFT_PART_SRC}/config
      override-build: |
        snapcraftctl build
        install bin/edge-core ${SNAPCRAFT_PART_INSTALL}
      organize:
        'edge-core': wigwag/mbed/
    files:
        plugin: dump
        source: files-dumped/
    devicejs-ng:
      plugin: nodejs-improved
      nodejs-package-manager: npm
      build-packages:
        - python
        - build-essential
      source: git@github.com:armPelionEdge/devicejs-ng.git
      source-branch: master
      stage: [ -deps/*, -bin/devicedb ]
      organize:
        '*': wigwag/devicejs-ng/
    devicedb:
      plugin: go
      source: git@github.com:armPelionEdge/devicedb.git
      source-branch: master
      go-importpath: devicedb
      organize:
        'bin/*': wigwag/system/bin/
    edge-node-modules:
      plugin: nodejs-improved
      nodejs-package-manager: npm
      build-packages:
        - python
        - build-essential
      source: git@github.com:armPelionEdge/edge-node-modules.git
      source-branch: master
      override-build: |
        git am ${SNAPCRAFT_PROJECT_DIR}/patches/edge-node-modules/0001-Added-package.json.patch
        snapcraftctl build
      organize:
        'DevStateManager/': wigwag/wigwag-core-modules/DevStateManager/
        'LEDController/': wigwag/wigwag-core-modules/LEDController/
        'RelayStatsSender/': wigwag/wigwag-core-modules/RelayStatsSender/
        'VirtualDeviceDriver/': wigwag/wigwag-core-modules/VirtualDeviceDriver/
        'onsite-enterprise-server/': wigwag/wigwag-core-modules/onsite-enterprise-server/
        'relay-term/': wigwag/wigwag-core-modules/relay-term/
        'rsmi/': wigwag/devicejs-core-modules/rsmi/
        'zigbeeHA/': wigwag/devicejs-core-modules/zigbeeHA/
        'node_modules/': wigwag/devicejs-core-modules/node_modules/
        'maestroRunner/': wigwag/devicejs-core-modules/maestroRunner/
        'core-interfaces/': wigwag/devicejs-core-modules/core-interfaces/
    deviceoswd:
      plugin: autotools
      source: git@github.com:armPelionEdge/edgeos-wd.git 
      source-branch: master
      build-packages:
        - libtool
        - m4
      override-build: |
        cd deps
        ./install-deps.sh
        cd ..
        make clean
        make deviceOSWD-dummy
        install deviceOSWD ${SNAPCRAFT_PART_INSTALL}/deviceOSWD_dummy
        install deviceOSWD ${SNAPCRAFT_PART_INSTALL}/deviceOSWD
        make clean
        make deviceOSWD-dummy-debug
        install deviceOSWD ${SNAPCRAFT_PART_INSTALL}/deviceOSWD_dummy_debug
        make clean
        make deviceOSWD-a10-debug
        install deviceOSWD ${SNAPCRAFT_PART_INSTALL}/deviceOSWD_a10_debug
        make clean
        make deviceOSWD-a10
        make clean
        make deviceOSWD-a10-relay
        install deviceOSWD ${SNAPCRAFT_PART_INSTALL}/deviceOSWD_a10_relay
        make clean
        make deviceOSWD-a10-tiny841
        install deviceOSWD ${SNAPCRAFT_PART_INSTALL}/deviceOSWD_a10_tiny841
        make clean
        make deviceOSWD-rpi-3bplus
        install deviceOSWD ${SNAPCRAFT_PART_INSTALL}/deviceOSWD_rpi_3bplus
      organize:
        deviceOSWD: wigwag/system/bin/deviceOSWD
        deviceOSWD_dummy: wigwag/system/bin/deviceOSWD_dummy
        deviceOSWD_a10_debug: wigwag/system/bin/deviceOSWD_a10_debug
        deviceOSWD_a10_relay: wigwag/system/bin/deviceOSWD_a10_relay
        deviceOSWD_dummy_debug: wigwag/system/bin/deviceOSWD_dummy_debug
        deviceOSWD_a10_tiny841: wigwag/system/bin/deviceOSWD_a10_tiny841
    wwrelay-utils:
      plugin: nodejs-improved
      nodejs-package-manager: npm
      build-packages:
        - python
        - build-essential
      source: git@github.com:armPelionEdge/edge-utils.git
      source-branch: master
      override-build: |
        cp ${SNAPCRAFT_PROJECT_DIR}/files-installed/wwrelay-utils/package.json .
        snapcraftctl build
        cd 6BSMD
        make all
        cd ../I2C
        ../../npm/bin/npm install --production
        cd ../GPIO
        ../../npm/bin/npm install --production
        make
        cd ../slip-radio
        ../../npm/bin/npm install --production
        cd ../slipcomms
        make
        cd ..
        install slipcomms/slipcomms ${SNAPCRAFT_PART_INSTALL}/wigwag/devicejs-core-modules/rsmi/bin/slipcomms-arm
        cd cc2530prog
        make
        cd ..
        install cc2530prog/cc2530prog ${SNAPCRAFT_PART_INSTALL}/wigwag/devicejs-core-modules/rsmi/bin/cc2530prog-arm
        cp ${SNAPCRAFT_PROJECT_DIR}/files-installed/wwrelay-utils/wwrelay etc/init.d/.
        cp ${SNAPCRAFT_PROJECT_DIR}/files-installed/wwrelay-utils/version.json wigwag/wwrelay-utils/conf/versions.json
        cp ${SNAPCRAFT_PROJECT_DIR}/files-installed/wwrelay-utils/version.json wigwag/etc/versions.json
        install dev-tools/bin/ccommon.sh ${SNAPCRAFT_PART_INSTALL}/wigwag/system/bin/ccommon.sh
        install dev-tools/bin/stopwatchdog.sh ${SNAPCRAFT_PART_INSTALL}/wigwag/system/bin/stopwatchdog
        install dev-tools/scripts/restartjob.sh ${SNAPCRAFT_PART_INSTALL}/wigwag/system/bin/restartjob.sh
        install GPIO/led.sh ${SNAPCRAFT_PART_INSTALL}/wigwag/system/bin/led
        install GPIO/pinctrl.sh ${SNAPCRAFT_PART_INSTALL}/wigwag/system/bin/pinctrl
        install GPIO/leddaemon ${SNAPCRAFT_PART_INSTALL}/wigwag/system/bin/leddaemon
        install DOGcontrol/dogProgrammer.sh ${SNAPCRAFT_PART_INSTALL}/wigwag/system/bin/dogProgrammer
        install I2C/eetool.sh ${SNAPCRAFT_PART_INSTALL}/wigwag/system/bin/eetool
      organize:
        conf: wigwag/wwrelay-utils/conf
        6BSMD: wigwag/wwrelay-utils/6BSMD
        common: wigwag/wwrelay-utils/common
        slip-radio: wigwag/wwrelay-utils/slip-radio
        .b: wigwag/wwrelay-utils/.b
        initscripts: wigwag/wwrelay-utils/initscripts
        GPIO: wigwag/wwrelay-utils/GPIO
        I2C: wigwag/wwrelay-utils/I2C
        debug_scripts: wigwag/wwrelay-utils/debug_scripts
        dev-tools: wigwag/wwrelay-utils/dev-tools
      filesets:
        etc:
          - etc/dnsmasq.conf
          - etc/dnsmasq.d/*
          - etc/modprobe.d/*
          - etc/profile.d/wigwagpath.sh
          - etc/init.d/devjssupport
          - etc/init.d/relayterm
          - etc/init.d/wwfunctions
          - etc/init.d/wwrelay
        conf:
          - wigwag/wwrelay-utils/conf/*
        versions:
          - wigwag/etc/versions.json
        utils:
          - wigwag/devicejs-core-modules/rsmi/bin/slipcomms-arm
          - wigwag/devicejs-core-modules/rsmi/bin/cc2530prog-arm
          - wigwag/wwrelay-utils/6BSMD/*
          - wigwag/wwrelay-utils/common/*
          - wigwag/wwrelay-utils/slip-radio/*
          - wigwag/wwrelay-utils/.b
          - wigwag/wwrelay-utils/initscripts/*
          - wigwag/wwrelay-utils/GPIO/*
          - -wigwag/wwrelay-utils/GPIO/led.sh
          - -wigwag/wwrelay-utils/GPIO/pinctrl.sh
          - -wigwag/wwrelay-utils/GPIO/leddaemon
          - -wigwag/wwrelay-utils/I2C/eetool.sh
        debug:
          - wigwag/wwrelay-utils/debug_scripts
        devtools:
          - wigwag/wwrelay-utils/dev-tools
          - -wigwag/wwrelay-utils/dev-tools/bin/stopwatchdog.sh
          - -wigwag/wwrelay-utils/dev-tools/bin/info.sh
        system:
          - wigwag/system/bin/ccommon.sh
          - wigwag/system/bin/stopwatchdog
          - wigwag/system/bin/restartjob.sh
          - wigwag/system/bin/led
          - wigwag/system/bin/pinctrl
          - wigwag/system/bin/leddaemon
          - wigwag/system/bin/dogProgrammer
          - wigwag/system/bin/eetool
      stage:
        - $etc
        - $conf
        - $versions
        - $utils
        - $debug
        - $devtools
        - $system
    dss:
      plugin: dump
      source: git@github.com:armPelionEdge/edgeos-shell-scripts.git
      source-branch: master
      organize:
        '*': wigwag/system/bin/
    openssl10:
      plugin: make
      make-install-var: "INSTALL_PREFIX"
      source: https://www.openssl.org/source/openssl-1.0.2s.tar.gz
      override-build: |
        ./config shared
        make depend
        snapcraftctl build
