unixLogSocket: /tmp/grease.socket
sysLogSocket: /run/systemd/journal/syslog
linuxKernelLog: false
httpUnixSocket: /tmp/maestroapi.sock
configDBPath: "{{SNAP_DATA}}/userdata/etc/maestroConfig.db"
imagePath: /tmp/maestro/images
scratchPath: /tmp/maestro/scratch
clientId: "{{ARCH_SERIAL_NUMBER}}"
network:
    disable: true
platform_readers:
  - platform: "fsonly"
    params:
      identityPath: "/var/snap/pelion-edge/current/userdata/edge_gw_identity/identity.json"
var_defs:
   - key: "SNAP_DATA"
     value: "/var/snap/pelion-edge/current"
   - key: "SNAP"
     value: "/snap/pelion-edge/current"
   - key: "TMP_DIR"
     value: "/tmp"
   - key: "WIGWAG_NODE_PATH"
     value: "{{SNAP}}/wigwag/devicejs-core-modules/node_modules"
   - key: "WIGWAG_DIR"
     value: "{{SNAP}}/wigwag"
   - key: "NODE_EXEC"
     value: "{{SNAP}}/wigwag/system/bin/node"
   - key: "MAESTRO_RUNNER_DIR"
     value: "{{SNAP}}/wigwag/devicejs-core-modules/maestroRunner"
   - key: "SSL_CERTS_PATH"
     value: "{{SNAP_DATA}}/userdata/edge_gw_identity/.ssl"
   - key: "LOCAL_DEVICEDB_PORT"
     value: 9000
   - key: "LOCAL_DATABASE_STORAGE_DIRECTORY"
     value: "{{SNAP_DATA}}/userdata/etc/devicedb/db"
   - key: "RELAY_VERSIONS_FILE"
     value: "{{SNAP}}/wigwag/etc/versions.json"
   - key: "FACTORY_VERSIONS_FILE"
     value: "{{SNAP}}/wigwag/etc/versions.json"
   - key: "USER_VERSIONS_FILE"
     value: "{{SNAP}}/wigwag/etc/versions.json"
   - key: "UPGRADE_VERSIONS_FILE"
     value: "{{SNAP}}/wigwag/etc/versions.json"
devicedb_conn_config:
  devicedb_uri: "http://{{ARCH_DEVICE_ID}}:9000" #default uri
  devicedb_prefix: "configs.device" #default prefix
  devicedb_bucket: "lww" #default bucket
  relay_id: "{{ARCH_DEVICE_ID}}" #default relay id
  ca_chain: "{{SSL_CERTS_PATH}}/ca-chain.cert.pem" #default chain cert file name
mdns:
  # disable: true
  static_records:
   - name: "WigWagRelay"
     service: "_wwservices._tcp"  # normally something like https or ftp
     # domain: "local"     # local is default
     interfaces: "eth0"
     not_interfaces: "Witap0"
     port: 3131
     text:
      - "wwid={{ARCH_SERIAL_NUMBER}}"
     hostname: "wigwaggateway"
   - name: "WigWagRelay_{{ARCH_SERIAL_NUMBER}}"
     service: "_wwservices._tcp"  # normally something like https or ftp
     # domain: "local"     # local is default
     interfaces: "eth0"
     not_interfaces: "Witap0"
     port: 3131
     text:
      - "wwid={{ARCH_SERIAL_NUMBER}}"
     hostname: "{{ARCH_SERIAL_NUMBER}}"
symphony:
# symphony system management APIs
    # defaults to 10:
    disable_sys_stats: true
    sys_stats_count_threshold: 15     # send if you have 15 or more stats queued
    sys_stats_time_threshold: 120000  # every 120 seconds send stuff, no matter what
    #client_cert: "{{ARCH_CLIENT_CERT_PEM}}"
    #client_key: "{{ARCH_CLIENT_KEY_PEM}}"
    no_tls: true
    host: "gateways.local"
    url_logs: "http://gateways.local:8080/relay-logs/logs"
    url_stats: "http://gateways.local:8080/relay-stats/stats_obj"
    send_time_threshold: 120000       # set the send time threshold to 2 minutes
    # port: "{{ARCH_RELAY_SERVICES_PORT}}"
targets:
   - file: "{{SNAP_DATA}}/userdata/maestro.log"
     rotate:
         max_files: 4
         max_file_size: 10000000  # 10MB max file size
         max_total_size: 42000000
         rotate_on_start: true
     delim: "\n"
     format_time: "[%ld:%d] "
     format_level: "<%s> "
     format_tag: "{%s} "
     format_origin: "(%s) "
     filters:
       - levels: warn
         format_pre: "\u001B[33m"    # yellow
         format_post: "\u001B[39m"
       - levels: error
         format_pre: "\u001B[31m"    # red
         format_post: "\u001B[39m"
   - name: "toCloud"  # this is a special target for sending to the cloud. It must send as a JSON
     format_time: "\"timestamp\":%ld%03d, "
     format_level: "\"level\":\"%s\", "
     format_tag: "\"tag\":\"%s\", "
     format_origin: "\"origin\":\"%s\", "
     format_pre_msg: "\"text\":\""
     format_post: "\"},"
     flag_json_escape_strings: true
     filters:
       - levels: warn
         format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
       - levels: error
         format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
#   - file: "{{TMP_DIR}}/maestro.log"
   # - TTY: "console"
   #   rotate:
   #       max_files: 10
   #       max_file_size: 10000
   #       max_total_size: 100000
   #       rotate_on_start: true
   #   delim: "\n"
   #   format_time: "[%ld:%d] "
   #   format_level: "<%s> "
   #   format_tag: "{%s} "
   #   format_origin: "(%s) "
   #   filters:
   #     - levels: error
   #       format_pre: "\u001B[31m"
   #       format_post: "\u001B[39m"
   #     - levels: debug
   #       format_pre: "\u001B[36m"
   #       format_post: "\u001B[39m"
# JSON file
   # - file: /tmp/json-maestro.log
   #   rotate:
   #       max_files: 10
   #       max_file_size: 10000
   #       max_total_size: 100000
   #       rotate_on_start: true
   #   delim: "],\n"
   #   format_time: "{\"time\":\"%ld:%d\"}, "
   #   format_level: "{\"level\":\"%s\"}, "
   #   format_tag: "{\"tag\":\"%s\"}, "
   #   format_origin: "{\"origin\":\"%s\"}, "
   #   format_pre_msg: "{ \"msg\":\""
   #   format_post: "\"}"
   #   flag_json_escape_strings: true
   #   filters:
   #     - levels: all
   #       format_pre: "["     # you will wrap this output with { "log": [ OUTPUT ] }



#         format_post: "]}"  # I am not sure if this works
   # - name: "toCloud"  # this is a special target for sending to the cloud. It must send as a JSON
   #   format_time: "\"time\":\"%ld:%d\", "
   #   format_level: "\"level\":\"%s\", "
   #   format_tag: "\"tag\":\"%s\", "
   #   format_origin: "\"origin\":\"%s\", "
   #   format_pre_msg: "\"msg\":\""
   #   format_post: "\"}"
   #   flag_json_escape_strings: true
   #   filters:
   #     - levels: all
   #       format_pre: "{"     # you will wrap this output with { "log": [ OUTPUT ] }
static_file_generators:
   - name: "devicedb"
     template_file: "{{SNAP}}/wigwag/wwrelay-utils/conf/maestro-conf/template.devicedb.conf"
     output_file: "{{SNAP_DATA}}/wigwag/etc/devicejs/devicedb.yaml"
   - name: "ca_pem"
     template: "{{ARCH_CA_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/ca.cert.pem"
   - name: "intermediate_pem"
     template: "{{ARCH_INTERMEDIATE_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/intermediate.cert.pem"
   - name: "client_key"
     template: "{{ARCH_CLIENT_KEY_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/client.key.pem"
   - name: "client_cert"
     template: "{{ARCH_CLIENT_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/client.cert.pem"
   - name: "server_key"
     template: "{{ARCH_SERVER_KEY_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/server.key.pem"
   - name: "server_cert"
     template: "{{ARCH_SERVER_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/server.cert.pem"
   - name: "ca_chain"
     template: "{{ARCH_CA_CHAIN_CERT_PEM}}"
     output_file: "{{SSL_CERTS_PATH}}/ca-chain.cert.pem"
   - name: "relayTerm"
     template_file: "{{SNAP}}/wigwag/wwrelay-utils/conf/maestro-conf/relayTerm.template.json"
     output_file: "{{SNAP_DATA}}/wigwag/etc/relayterm-config.json"
config_end: true
